{
  "version": 3,
  "sources": ["../../@ungap/weakmap/esm/index.js", "../../domconstants/esm/index.js", "../../domsanitizer/esm/index.js", "../../uarray/esm/index.js", "../../umap/esm/index.js", "../../uwire/esm/index.js", "../../@ungap/create-content/esm/index.js", "../../udomdiff/esm/index.js", "../../@ungap/import-node/esm/index.js", "../../@ungap/trim/esm/index.js", "../../domtagger/esm/walker.js", "../../domtagger/esm/index.js", "../../hyperhtml-style/esm/index.js", "../../uhandlers/esm/index.js", "../../lighterhtml/esm/tagger.js", "../../lighterhtml/esm/index.js"],
  "sourcesContent": ["/*! (c) Andrea Giammarchi - ISC */\nvar self = {};\ntry { self.WeakMap = WeakMap; }\ncatch (WeakMap) {\n  // this could be better but 90% of the time\n  // it's everything developers need as fallback\n  self.WeakMap = (function (id, Object) {'use strict';\n    var dP = Object.defineProperty;\n    var hOP = Object.hasOwnProperty;\n    var proto = WeakMap.prototype;\n    proto.delete = function (key) {\n      return this.has(key) && delete key[this._];\n    };\n    proto.get = function (key) {\n      return this.has(key) ? key[this._] : void 0;\n    };\n    proto.has = function (key) {\n      return hOP.call(key, this._);\n    };\n    proto.set = function (key, value) {\n      dP(key, this._, {configurable: true, value: value});\n      return this;\n    };\n    return WeakMap;\n    function WeakMap(iterable) {\n      dP(this, '_', {value: '_@ungap/weakmap' + id++});\n      if (iterable)\n        iterable.forEach(add, this);\n    }\n    function add(pair) {\n      this.set(pair[0], pair[1]);\n    }\n  }(Math.random(), Object));\n}\nexport default self.WeakMap;\n", "/*! (c) Andrea Giammarchi - ISC */\n\n// Custom\nvar UID = '-' + Math.random().toFixed(6) + '%';\n//                           Edge issue!\n\nvar UID_IE = false;\n\ntry {\n  if (!(function (template, content, tabindex) {\n    return content in template && (\n      (template.innerHTML = '<p ' + tabindex + '=\"' + UID + '\"></p>'),\n      template[content].childNodes[0].getAttribute(tabindex) == UID\n    );\n  }(document.createElement('template'), 'content', 'tabindex'))) {\n    UID = '_dt: ' + UID.slice(1, -1) + ';';\n    UID_IE = true;\n  }\n} catch(meh) {}\n\nvar UIDC = '<!--' + UID + '-->';\n\n// DOM\nvar COMMENT_NODE = 8;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\n\nvar SHOULD_USE_TEXT_CONTENT = /^(?:plaintext|script|style|textarea|title|xmp)$/i;\nvar VOID_ELEMENTS = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\n\nexport {\n  UID, UIDC, UID_IE,\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE,\n  TEXT_NODE,\n  SHOULD_USE_TEXT_CONTENT,\n  VOID_ELEMENTS\n};\n", "/*! (c) Andrea Giammarchi - ISC */\n\nimport {UID, UIDC, VOID_ELEMENTS} from 'domconstants';\n\nexport default function (template) {\n  return template.join(UIDC)\n          .replace(selfClosing, fullClosing)\n          .replace(attrSeeker, attrReplacer);\n}\n\nvar spaces = ' \\\\f\\\\n\\\\r\\\\t';\nvar almostEverything = '[^' + spaces + '\\\\/>\"\\'=]+';\nvar attrName = '[' + spaces + ']+' + almostEverything;\nvar tagName = '<([A-Za-z]+[A-Za-z0-9:._-]*)((?:';\nvar attrPartials = '(?:\\\\s*=\\\\s*(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything.replace('\\\\/', '') + '))?)';\n\nvar attrSeeker = new RegExp(tagName + attrName + attrPartials + '+)([' + spaces + ']*/?>)', 'g');\nvar selfClosing = new RegExp(tagName + attrName + attrPartials + '*)([' + spaces + ']*/>)', 'g');\nvar findAttributes = new RegExp('(' + attrName + '\\\\s*=\\\\s*)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\n\nfunction attrReplacer($0, $1, $2, $3) {\n  return '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\n}\n\nfunction replaceAttributes($0, $1, $2) {\n  return $1 + ($2 || '\"') + UID + ($2 || '\"');\n}\n\nfunction fullClosing($0, $1, $2) {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n}\n", "const {isArray} = Array;\nconst {indexOf, slice} = [];\n\nexport {isArray, indexOf, slice};\n", "export default _ => ({\n  // About: get: _.get.bind(_)\n  // It looks like WebKit/Safari didn't optimize bind at all,\n  // so that using bind slows it down by 60%.\n  // Firefox and Chrome are just fine in both cases,\n  // so let's use the approach that works fast everywhere 👍\n  get: key => _.get(key),\n  set: (key, value) => (_.set(key, value), value)\n});\n", "import {slice} from 'uarray';\n\nconst ELEMENT_NODE = 1;\nconst nodeType = 111;\n\nconst remove = ({firstChild, lastChild}) => {\n  const range = document.createRange();\n  range.setStartAfter(firstChild);\n  range.setEndAfter(lastChild);\n  range.deleteContents();\n  return firstChild;\n};\n\nexport const diffable = (node, operation) => node.nodeType === nodeType ?\n  ((1 / operation) < 0 ?\n    (operation ? remove(node) : node.lastChild) :\n    (operation ? node.valueOf() : node.firstChild)) :\n  node\n;\n\nexport const persistent = fragment => {\n  const {childNodes} = fragment;\n  const {length} = childNodes;\n  if (length < 2)\n    return length ? childNodes[0] : fragment;\n  const nodes = slice.call(childNodes, 0);\n  const firstChild = nodes[0];\n  const lastChild = nodes[length - 1];\n  return {\n    ELEMENT_NODE,\n    nodeType,\n    firstChild,\n    lastChild,\n    valueOf() {\n      if (childNodes.length !== length) {\n        let i = 0;\n        while (i < length)\n          fragment.appendChild(nodes[i++]);\n      }\n      return fragment;\n    }\n  };\n};\n", "/*! (c) Andrea Giammarchi - ISC */\nvar createContent = (function (document) {'use strict';\n  var FRAGMENT = 'fragment';\n  var TEMPLATE = 'template';\n  var HAS_CONTENT = 'content' in create(TEMPLATE);\n\n  var createHTML = HAS_CONTENT ?\n    function (html) {\n      var template = create(TEMPLATE);\n      template.innerHTML = html;\n      return template.content;\n    } :\n    function (html) {\n      var content = create(FRAGMENT);\n      var template = create(TEMPLATE);\n      var childNodes = null;\n      if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n        var selector = RegExp.$1;\n        template.innerHTML = '<table>' + html + '</table>';\n        childNodes = template.querySelectorAll(selector);\n      } else {\n        template.innerHTML = html;\n        childNodes = template.childNodes;\n      }\n      append(content, childNodes);\n      return content;\n    };\n\n  return function createContent(markup, type) {\n    return (type === 'svg' ? createSVG : createHTML)(markup);\n  };\n\n  function append(root, childNodes) {\n    var length = childNodes.length;\n    while (length--)\n      root.appendChild(childNodes[0]);\n  }\n\n  function create(element) {\n    return element === FRAGMENT ?\n      document.createDocumentFragment() :\n      document.createElementNS('http://www.w3.org/1999/xhtml', element);\n  }\n\n  // it could use createElementNS when hasNode is there\n  // but this fallback is equally fast and easier to maintain\n  // it is also battle tested already in all IE\n  function createSVG(svg) {\n    var content = create(FRAGMENT);\n    var template = create('div');\n    template.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\">' + svg + '</svg>';\n    append(content, template.firstChild.childNodes);\n    return content;\n  }\n\n}(document));\nexport default createContent;\n", "/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * @param {Node} parentNode The container where children live\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (parentNode, a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd], 0)) :\n        before;\n      while (bStart < bEnd)\n        parentNode.insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          parentNode.removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -0).nextSibling;\n      parentNode.insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -0).nextSibling\n      );\n      parentNode.insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              parentNode.insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            parentNode.replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        parentNode.removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n", "/*! (c) Andrea Giammarchi - ISC */\nvar importNode = (function (\n  document,\n  appendChild,\n  cloneNode,\n  createTextNode,\n  importNode\n) {\n  var native = importNode in document;\n  // IE 11 has problems with cloning templates:\n  // it \"forgets\" empty childNodes. This feature-detects that.\n  var fragment = document.createDocumentFragment();\n  fragment[appendChild](document[createTextNode]('g'));\n  fragment[appendChild](document[createTextNode](''));\n  /* istanbul ignore next */\n  var content = native ?\n    document[importNode](fragment, true) :\n    fragment[cloneNode](true);\n  return content.childNodes.length < 2 ?\n    function importNode(node, deep) {\n      var clone = node[cloneNode]();\n      for (var\n        /* istanbul ignore next */\n        childNodes = node.childNodes || [],\n        length = childNodes.length,\n        i = 0; deep && i < length; i++\n      ) {\n        clone[appendChild](importNode(childNodes[i], deep));\n      }\n      return clone;\n    } :\n    /* istanbul ignore next */\n    (native ?\n      document[importNode] :\n      function (node, deep) {\n        return node[cloneNode](!!deep);\n      }\n    );\n}(\n  document,\n  'appendChild',\n  'cloneNode',\n  'createTextNode',\n  'importNode'\n));\nexport default importNode;\n", "var trim = ''.trim || /* istanbul ignore next */ function () {\n  return String(this).replace(/^\\s+|\\s+/g, '');\n};\nexport default trim;\n", "import trim from '@ungap/trim';\n\nimport {\n  UID, UIDC, UID_IE,\n  COMMENT_NODE,\n  ELEMENT_NODE,\n  SHOULD_USE_TEXT_CONTENT,\n  TEXT_NODE\n} from 'domconstants';\n\nexport {find, parse};\n\n/* istanbul ignore next */\nvar normalizeAttributes = UID_IE ?\n  function (attributes, parts) {\n    var html = parts.join(' ');\n    return parts.slice.call(attributes, 0).sort(function (left, right) {\n      return html.indexOf(left.name) <= html.indexOf(right.name) ? -1 : 1;\n    });\n  } :\n  function (attributes, parts) {\n    return parts.slice.call(attributes, 0);\n  }\n;\n\nfunction find(node, path) {\n  var length = path.length;\n  var i = 0;\n  while (i < length)\n    node = node.childNodes[path[i++]];\n  return node;\n}\n\nfunction parse(node, holes, parts, path) {\n  var childNodes = node.childNodes;\n  var length = childNodes.length;\n  var i = 0;\n  while (i < length) {\n    var child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        var childPath = path.concat(i);\n        parseAttributes(child, holes, parts, childPath);\n        parse(child, holes, parts, childPath);\n        break;\n      case COMMENT_NODE:\n        var textContent = child.textContent;\n        if (textContent === UID) {\n          parts.shift();\n          holes.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Text(node, path) :\n              Any(child, path.concat(i))\n          );\n        } else {\n          switch (textContent.slice(0, 2)) {\n            case '/*':\n              if (textContent.slice(-2) !== '*/')\n                break;\n            case '\\uD83D\\uDC7B': // ghost\n              node.removeChild(child);\n              i--;\n              length--;\n          }\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          holes.push(Text(node, path));\n        }\n        break;\n    }\n    i++;\n  }\n}\n\nfunction parseAttributes(node, holes, parts, path) {\n  var attributes = node.attributes;\n  var cache = [];\n  var remove = [];\n  var array = normalizeAttributes(attributes, parts);\n  var length = array.length;\n  var i = 0;\n  while (i < length) {\n    var attribute = array[i++];\n    var direct = attribute.value === UID;\n    var sparse;\n    if (direct || 1 < (sparse = attribute.value.split(UIDC)).length) {\n      var name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (cache.indexOf(name) < 0) {\n        cache.push(name);\n        var realName = parts.shift().replace(\n          direct ?\n            /^(?:|[\\S\\s]*?\\s)(\\S+?)\\s*=\\s*('|\")?$/ :\n            new RegExp(\n              '^(?:|[\\\\S\\\\s]*?\\\\s)(' + name + ')\\\\s*=\\\\s*(\\'|\")[\\\\S\\\\s]*',\n              'i'\n            ),\n            '$1'\n        );\n        var value = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        if (direct)\n          holes.push(Attr(value, path, realName, null));\n        else {\n          var skip = sparse.length - 2;\n          while (skip--)\n            parts.shift();\n          holes.push(Attr(value, path, realName, sparse));\n        }\n      }\n      remove.push(attribute);\n    }\n  }\n  length = remove.length;\n  i = 0;\n\n  /* istanbul ignore next */\n  var cleanValue = 0 < length && UID_IE && !('ownerSVGElement' in node);\n  while (i < length) {\n    // Edge HTML bug #16878726\n    var attr = remove[i++];\n    // IE/Edge bug lighterhtml#63 - clean the value or it'll persist\n    /* istanbul ignore next */\n    if (cleanValue)\n      attr.value = '';\n    // IE/Edge bug lighterhtml#64 - don't use removeAttributeNode\n    node.removeAttribute(attr.name);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense?\n  var nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    // this used to be like that\n    // var script = createElement(node, nodeName);\n    // then Edge arrived and decided that scripts created\n    // through template documents aren't worth executing\n    // so it became this ... hopefully it won't hurt in the wild\n    var script = document.createElement(nodeName);\n    length = attributes.length;\n    i = 0;\n    while (i < length)\n      script.setAttributeNode(attributes[i++].cloneNode(true));\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n}\n\nfunction Any(node, path) {\n  return {\n    type: 'any',\n    node: node,\n    path: path\n  };\n}\n\nfunction Attr(node, path, name, sparse) {\n  return {\n    type: 'attr',\n    node: node,\n    path: path,\n    name: name,\n    sparse: sparse\n  };\n}\n\nfunction Text(node, path) {\n  return {\n    type: 'text',\n    node: node,\n    path: path\n  };\n}\n", "// globals\nimport WeakMap from '@ungap/weakmap';\n\n// utils\nimport createContent from '@ungap/create-content';\nimport importNode from '@ungap/import-node';\nimport trim from '@ungap/trim';\nimport sanitize from 'domsanitizer';\nimport umap from 'umap';\n\n// local\nimport {find, parse} from './walker.js';\n\n// the domtagger 🎉\nexport default domtagger;\n\nvar parsed = umap(new WeakMap);\n\nfunction createInfo(options, template) {\n  var markup = (options.convert || sanitize)(template);\n  var transform = options.transform;\n  if (transform)\n    markup = transform(markup);\n  var content = createContent(markup, options.type);\n  cleanContent(content);\n  var holes = [];\n  parse(content, holes, template.slice(0), []);\n  return {\n    content: content,\n    updates: function (content) {\n      var updates = [];\n      var len = holes.length;\n      var i = 0;\n      var off = 0;\n      while (i < len) {\n        var info = holes[i++];\n        var node = find(content, info.path);\n        switch (info.type) {\n          case 'any':\n            updates.push({fn: options.any(node, []), sparse: false});\n            break;\n          case 'attr':\n            var sparse = info.sparse;\n            var fn = options.attribute(node, info.name, info.node);\n            if (sparse === null)\n              updates.push({fn: fn, sparse: false});\n            else {\n              off += sparse.length - 2;\n              updates.push({fn: fn, sparse: true, values: sparse});\n            }\n            break;\n          case 'text':\n            updates.push({fn: options.text(node), sparse: false});\n            node.textContent = '';\n            break;\n        }\n      }\n      len += off;\n      return function () {\n        var length = arguments.length;\n        if (len !== (length - 1)) {\n          throw new Error(\n            (length - 1) + ' values instead of ' + len + '\\n' +\n            template.join('${value}')\n          );\n        }\n        var i = 1;\n        var off = 1;\n        while (i < length) {\n          var update = updates[i - off];\n          if (update.sparse) {\n            var values = update.values;\n            var value = values[0];\n            var j = 1;\n            var l = values.length;\n            off += l - 2;\n            while (j < l)\n              value += arguments[i++] + values[j++];\n            update.fn(value);\n          }\n          else\n            update.fn(arguments[i++]);\n        }\n        return content;\n      };\n    }\n  };\n}\n\nfunction createDetails(options, template) {\n  var info = parsed.get(template) || parsed.set(template, createInfo(options, template));\n  return info.updates(importNode.call(document, info.content, true));\n}\n\nvar empty = [];\nfunction domtagger(options) {\n  var previous = empty;\n  var updates = cleanContent;\n  return function (template) {\n    if (previous !== template)\n      updates = createDetails(options, (previous = template));\n    return updates.apply(null, arguments);\n  };\n}\n\nfunction cleanContent(fragment) {\n  var childNodes = fragment.childNodes;\n  var i = childNodes.length;\n  while (i--) {\n    var child = childNodes[i];\n    if (\n      child.nodeType !== 1 &&\n      trim.call(child.textContent).length === 0\n    ) {\n      fragment.removeChild(child);\n    }\n  }\n}\n", "/*! (c) Andrea Giammarchi - ISC */\nvar hyperStyle = (function (){'use strict';\n  // from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/varants.js\n  var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n  var hyphen = /([^A-Z])([A-Z]+)/g;\n  return function hyperStyle(node, original) {\n    return 'ownerSVGElement' in node ? svg(node, original) : update(node.style, false);\n  };\n  function ized($0, $1, $2) {\n    return $1 + '-' + $2.toLowerCase();\n  }\n  function svg(node, original) {\n    var style;\n    if (original)\n      style = original.cloneNode(true);\n    else {\n      node.setAttribute('style', '--hyper:style;');\n      style = node.getAttributeNode('style');\n    }\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, true);\n  }\n  function toStyle(object) {\n    var key, css = [];\n    for (key in object)\n      css.push(key.replace(hyphen, ized), ':', object[key], ';');\n    return css.join('');\n  }\n  function update(style, isSVG) {\n    var oldType, oldValue;\n    return function (newValue) {\n      var info, key, styleValue, value;\n      switch (typeof newValue) {\n        case 'object':\n          if (newValue) {\n            if (oldType === 'object') {\n              if (!isSVG) {\n                if (oldValue !== newValue) {\n                  for (key in oldValue) {\n                    if (!(key in newValue)) {\n                      style[key] = '';\n                    }\n                  }\n                }\n              }\n            } else {\n              if (isSVG)\n                style.value = '';\n              else\n                style.cssText = '';\n            }\n            info = isSVG ? {} : style;\n            for (key in newValue) {\n              value = newValue[key];\n              styleValue = typeof value === 'number' &&\n                                  !IS_NON_DIMENSIONAL.test(key) ?\n                                  (value + 'px') : value;\n              if (!isSVG && /^--/.test(key))\n                info.setProperty(key, styleValue);\n              else\n                info[key] = styleValue;\n            }\n            oldType = 'object';\n            if (isSVG)\n              style.value = toStyle((oldValue = info));\n            else\n              oldValue = newValue;\n            break;\n          }\n        default:\n          if (oldValue != newValue) {\n            oldType = 'string';\n            oldValue = newValue;\n            if (isSVG)\n              style.value = newValue || '';\n            else\n              style.cssText = newValue || '';\n          }\n          break;\n      }\n    };\n  }\n}());\nexport default hyperStyle;\n", "import {isArray} from 'uarray';\n\nexport const aria = node => values => {\n  for (const key in values) {\n    const name = key === 'role' ? key : `aria-${key}`;\n    const value = values[key];\n    if (value == null)\n      node.removeAttribute(name);\n    else\n      node.setAttribute(name, value);\n  }\n};\n\nexport const attribute = (node, name) => {\n  let oldValue, orphan = true;\n  const attributeNode = document.createAttributeNS(null, name);\n  return newValue => {\n    if (oldValue !== newValue) {\n      oldValue = newValue;\n      if (oldValue == null) {\n        if (!orphan) {\n          node.removeAttributeNode(attributeNode);\n          orphan = true;\n        }\n      }\n      else {\n        attributeNode.value = newValue;\n        if (orphan) {\n          node.setAttributeNodeNS(attributeNode);\n          orphan = false;\n        }\n      }\n    }\n  };\n};\n\nexport const boolean = (node, key, oldValue) => newValue => {\n  if (oldValue !== !!newValue) {\n    // when IE won't be around anymore ...\n    // node.toggleAttribute(key, oldValue = !!newValue);\n    if ((oldValue = !!newValue))\n      node.setAttribute(key, '');\n    else\n      node.removeAttribute(key);\n  }\n};\n\nexport const data = ({dataset}) => values => {\n  for (const key in values) {\n    const value = values[key];\n    if (value == null)\n      delete dataset[key];\n    else\n      dataset[key] = value;\n  }\n};\n\nexport const event = (node, name) => {\n  let oldValue, type = name.slice(2);\n  if (!(name in node) && name.toLowerCase() in node)\n    type = type.toLowerCase();\n  return newValue => {\n    const info = isArray(newValue) ? newValue : [newValue, false];\n    if (oldValue !== info[0]) {\n      if (oldValue)\n        node.removeEventListener(type, oldValue, info[1]);\n      if (oldValue = info[0])\n        node.addEventListener(type, oldValue, info[1]);\n    }\n  };\n};\n\nexport const ref = node => value => {\n  if (typeof value === 'function')\n    value(node);\n  else\n    value.current = node;\n};\n\nexport const setter = (node, key) => key === 'dataset' ?\n  data(node) :\n  value => {\n    node[key] = value;\n  };\n\nexport const text = node => {\n  let oldValue;\n  return newValue => {\n    if (oldValue != newValue) {\n      oldValue = newValue;\n      node.textContent = newValue == null ? '' : newValue;\n    }\n  };\n};\n", "import createContent from '@ungap/create-content';\nimport udomdiff from 'udomdiff';\nimport domtagger from 'domtagger';\nimport hyperStyle from 'hyperhtml-style';\nimport {aria, attribute, boolean, data, event, ref, setter} from 'uhandlers';\nimport {diffable} from 'uwire';\n\nimport {isArray, slice} from 'uarray';\n\n// special attributes helpers\nconst hyperProperty = (node, name) => {\n  let oldValue;\n  return newValue => {\n    if (oldValue !== newValue) {\n      oldValue = newValue;\n      if (node[name] !== newValue) {\n        if (newValue == null) {\n          // cleanup before dropping the attribute to fix IE/Edge gotcha\n          node[name] = '';\n          node.removeAttribute(name);\n        } else\n          node[name] = newValue;\n      }\n    }\n  };\n};\n\n// list of attributes that should not be directly assigned\nconst readOnly = /^(?:form|list)$/i;\n\n// simplifies text node creation\nconst text = (node, text) => node.ownerDocument.createTextNode(text);\n\nexport function Tagger(type) {\n  this.type = type;\n  return domtagger(this);\n};\n\nTagger.prototype = {\n\n  // there are four kind of attributes, and related behavior:\n  //  * events, with a name starting with `on`, to add/remove event listeners\n  //  * special, with a name present in their inherited prototype, accessed directly\n  //  * regular, accessed through get/setAttribute standard DOM methods\n  //  * style, the only regular attribute that also accepts an object as value\n  //    so that you can style=${{width: 120}}. In this case, the behavior has been\n  //    fully inspired by Preact library and its simplicity.\n  attribute(node, name, original) {\n    const isSVG = this.type === 'svg';\n    switch (name) {\n      case 'class':\n        if (isSVG)\n          return attribute(node, name, isSVG);\n        name = 'className';\n      case 'props':\n        return setter(node, name);\n      case 'aria':\n        return aria(node);\n      case 'style':\n        return hyperStyle(node, original, isSVG);\n      case 'ref':\n        return ref(node);\n      case '.dataset':\n        return data(node);\n      default:\n        if (name.slice(0, 1) === '.')\n          return setter(node, name.slice(1));\n        if (name.slice(0, 1) === '?')\n          return boolean(node, name.slice(1));\n        if (name.slice(0, 2) === 'on')\n          return event(node, name);\n        if (name in node && !(isSVG || readOnly.test(name)))\n          return hyperProperty(node, name);\n        return attribute(node, name, isSVG);\n\n    }\n  },\n\n  // in a hyper(node)`<div>${content}</div>` case\n  // everything could happen:\n  //  * it's a JS primitive, stored as text\n  //  * it's null or undefined, the node should be cleaned\n  //  * it's a promise, update the content once resolved\n  //  * it's an explicit intent, perform the desired operation\n  //  * it's an Array, resolve all values if Promises and/or\n  //    update the node with the resulting list of content\n  any(node, childNodes) {\n    const {type} = this;\n    let fastPath = false;\n    let oldValue;\n    const anyContent = value => {\n      switch (typeof value) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n          if (fastPath) {\n            if (oldValue !== value) {\n              oldValue = value;\n              childNodes[0].textContent = value;\n            }\n          } else {\n            fastPath = true;\n            oldValue = value;\n            childNodes = udomdiff(\n              node.parentNode,\n              childNodes,\n              [text(node, value)],\n              diffable,\n              node\n            );\n          }\n          break;\n        case 'function':\n          anyContent(value(node));\n          break;\n        case 'object':\n        case 'undefined':\n          if (value == null) {\n            fastPath = false;\n            childNodes = udomdiff(\n              node.parentNode,\n              childNodes,\n              [],\n              diffable,\n              node\n            );\n            break;\n          }\n        default:\n          fastPath = false;\n          oldValue = value;\n          if (isArray(value)) {\n            if (value.length === 0) {\n              if (childNodes.length) {\n                childNodes = udomdiff(\n                  node.parentNode,\n                  childNodes,\n                  [],\n                  diffable,\n                  node\n                );\n              }\n            } else {\n              switch (typeof value[0]) {\n                case 'string':\n                case 'number':\n                case 'boolean':\n                  anyContent(String(value));\n                  break;\n                case 'function':\n                  anyContent(value.map(invoke, node));\n                  break;\n                case 'object':\n                  if (isArray(value[0])) {\n                    value = value.concat.apply([], value);\n                  }\n                default:\n                  childNodes = udomdiff(\n                    node.parentNode,\n                    childNodes,\n                    value,\n                    diffable,\n                    node\n                  );\n                  break;\n              }\n            }\n          } else if ('ELEMENT_NODE' in value) {\n            childNodes = udomdiff(\n              node.parentNode,\n              childNodes,\n              value.nodeType === 11 ?\n                slice.call(value.childNodes) :\n                [value],\n                diffable,\n                node\n            );\n          } else if ('text' in value) {\n            anyContent(String(value.text));\n          } else if ('any' in value) {\n            anyContent(value.any);\n          } else if ('html' in value) {\n            childNodes = udomdiff(\n              node.parentNode,\n              childNodes,\n              slice.call(\n                createContent(\n                  [].concat(value.html).join(''),\n                  type\n                ).childNodes\n              ),\n              diffable,\n              node\n            );\n          } else if ('length' in value) {\n            anyContent(slice.call(value));\n          }\n          break;\n      }\n    };\n    return anyContent;\n  },\n\n  // style or textareas don't accept HTML as content\n  // it's pointless to transform or analyze anything\n  // different from text there but it's worth checking\n  // for possible defined intents.\n  text(node) {\n    let oldValue;\n    const textContent = value => {\n      if (oldValue !== value) {\n        oldValue = value;\n        const type = typeof value;\n        if (type === 'object' && value) {\n          if ('text' in value) {\n            textContent(String(value.text));\n          } else if ('any' in value) {\n            textContent(value.any);\n          } else if ('html' in value) {\n            textContent([].concat(value.html).join(''));\n          } else if ('length' in value) {\n            textContent(slice.call(value).join(''));\n          }\n        } else if (type === 'function') {\n          textContent(value(node));\n        } else {\n          node.textContent = value == null ? '' : value;\n        }\n      }\n    };\n    return textContent;\n  }\n};\n\nfunction invoke(callback) {\n  return callback(this);\n}\n", "import WeakMap from '@ungap/weakmap';\nimport domsanitizer from 'domsanitizer';\nimport {isArray} from 'uarray';\nimport umap from 'umap';\nimport {persistent} from 'uwire';\n\nimport {Tagger} from './tagger.js';\n\nconst {create, freeze, keys} = Object;\n\nconst tProto = Tagger.prototype;\n\nconst cache = umap(new WeakMap);\n\nconst createRender = Tagger => ({\n  html: outer('html', Tagger),\n  svg: outer('svg', Tagger),\n  render(where, what) {\n    const hole = typeof what === 'function' ? what() : what;\n    const info = cache.get(where) || cache.set(where, createCache());\n    const wire = hole instanceof LighterHole ?\n                  unroll(Tagger, info, hole) : hole;\n    if (wire !== info.wire) {\n      info.wire = wire;\n      where.textContent = '';\n      where.appendChild(wire.valueOf());\n    }\n    return where;\n  }\n});\n\nconst createCache = () => ({stack: [], entry: null, wire: null});\n\nconst outer = (type, Tagger) => {\n  const cache = umap(new WeakMap);\n  const fixed = info => function () {\n    return unroll(Tagger, info, hole.apply(null, arguments));\n  };\n  hole.for = (ref, id) => {\n    const memo = cache.get(ref) || cache.set(ref, create(null));\n    return memo[id] || (memo[id] = fixed(createCache()));\n  };\n  hole.node = function () {\n    return unroll(\n      Tagger,\n      createCache(),\n      hole.apply(null, arguments)\n    ).valueOf();\n  };\n  return hole;\n  function hole() {\n    return new LighterHole(type, tta.apply(null, arguments));\n  }\n};\n\nconst unroll = (Tagger, info, {type, template, values}) => {\n  const {length} = values;\n  unrollValues(Tagger, info, values, length);\n  let {entry} = info;\n  if (!entry || (entry.template !== template || entry.type !== type)) {\n    const tag = new Tagger(type);\n    info.entry = (entry = {\n      type,\n      template,\n      tag,\n      wire: persistent(tag(template, ...values))\n    });\n  }\n  else\n    entry.tag(template, ...values);\n  return entry.wire;\n};\n\nconst unrollValues = (Tagger, {stack}, values, length) => {\n  for (let i = 0; i < length; i++) {\n    const hole = values[i];\n    if (hole instanceof Hole)\n      values[i] = unroll(\n        Tagger,\n        stack[i] || (stack[i] = createCache()),\n        hole\n      );\n    else if (isArray(hole))\n      unrollValues(\n        Tagger,\n        stack[i] || (stack[i] = createCache()),\n        hole,\n        hole.length\n      );\n    else\n      stack[i] = null;\n  }\n  if (length < stack.length)\n    stack.splice(length);\n};\n\nfreeze(LighterHole);\nfunction LighterHole(type, args) {\n  this.type = type;\n  this.template = args.shift();\n  this.values = args;\n};\nexport const Hole = LighterHole;\n\nexport const custom = overrides => {\n  const prototype = create(tProto);\n  keys(overrides).forEach(key => {\n    prototype[key] = overrides[key](\n      prototype[key] ||\n      (key === 'convert' ? domsanitizer : String)\n    );\n  });\n  CustomTagger.prototype = prototype;\n  return createRender(CustomTagger);\n  function CustomTagger() {\n    return Tagger.apply(this, arguments);\n  }\n};\n\nconst {render, html, svg} = createRender(Tagger);\nexport {render, html, svg};\n\nfunction tta() {\n  let out = [], i = 0, {length} = arguments;\n  while (i < length)\n    out.push(arguments[i++]);\n  return out;\n}\n"],
  "mappings": "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",
  "names": ["WeakMap", "Object", "esm_default", "esm_default", "ELEMENT_NODE", "document", "create", "html", "createContent", "svg", "esm_default", "esm_default", "document", "importNode", "esm_default", "esm_default", "html", "esm_default", "cache", "remove", "attribute", "esm_default", "content", "i", "off", "hyperStyle", "svg", "esm_default", "text", "esm_default", "esm_default", "esm_default", "Tagger", "cache", "ref", "esm_default"]
}
